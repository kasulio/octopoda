/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardLayoutImport } from './routes/dashboard/layout'
import { Route as PublicLayoutImport } from './routes/_public/layout'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as DashboardUsersImport } from './routes/dashboard/users'
import { Route as DashboardImportImport } from './routes/dashboard/import'
import { Route as PublicPrivacyImport } from './routes/_public/privacy'
import { Route as PublicImpressumImport } from './routes/_public/impressum'
import { Route as PublicContributeImport } from './routes/_public/contribute'
import { Route as DashboardInstancesLayoutImport } from './routes/dashboard/instances/layout'
import { Route as DashboardInstancesIndexImport } from './routes/dashboard/instances/index'
import { Route as PublicViewDataIndexImport } from './routes/_public/view-data/index'
import { Route as DashboardInstancesInstanceIdImport } from './routes/dashboard/instances/$instanceId'
import { Route as PublicViewDataInstanceIdImport } from './routes/_public/view-data/$instanceId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const PublicLayoutRoute = PublicLayoutImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardImportRoute = DashboardImportImport.update({
  id: '/import',
  path: '/import',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const PublicPrivacyRoute = PublicPrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const PublicImpressumRoute = PublicImpressumImport.update({
  id: '/impressum',
  path: '/impressum',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const PublicContributeRoute = PublicContributeImport.update({
  id: '/contribute',
  path: '/contribute',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const DashboardInstancesLayoutRoute = DashboardInstancesLayoutImport.update({
  id: '/instances',
  path: '/instances',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardInstancesIndexRoute = DashboardInstancesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardInstancesLayoutRoute,
} as any)

const PublicViewDataIndexRoute = PublicViewDataIndexImport.update({
  id: '/view-data/',
  path: '/view-data/',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const DashboardInstancesInstanceIdRoute =
  DashboardInstancesInstanceIdImport.update({
    id: '/$instanceId',
    path: '/$instanceId',
    getParentRoute: () => DashboardInstancesLayoutRoute,
  } as any)

const PublicViewDataInstanceIdRoute = PublicViewDataInstanceIdImport.update({
  id: '/view-data/$instanceId',
  path: '/view-data/$instanceId',
  getParentRoute: () => PublicLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicLayoutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/instances': {
      id: '/dashboard/instances'
      path: '/instances'
      fullPath: '/dashboard/instances'
      preLoaderRoute: typeof DashboardInstancesLayoutImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_public/contribute': {
      id: '/_public/contribute'
      path: '/contribute'
      fullPath: '/contribute'
      preLoaderRoute: typeof PublicContributeImport
      parentRoute: typeof PublicLayoutImport
    }
    '/_public/impressum': {
      id: '/_public/impressum'
      path: '/impressum'
      fullPath: '/impressum'
      preLoaderRoute: typeof PublicImpressumImport
      parentRoute: typeof PublicLayoutImport
    }
    '/_public/privacy': {
      id: '/_public/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PublicPrivacyImport
      parentRoute: typeof PublicLayoutImport
    }
    '/dashboard/import': {
      id: '/dashboard/import'
      path: '/import'
      fullPath: '/dashboard/import'
      preLoaderRoute: typeof DashboardImportImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicLayoutImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_public/view-data/$instanceId': {
      id: '/_public/view-data/$instanceId'
      path: '/view-data/$instanceId'
      fullPath: '/view-data/$instanceId'
      preLoaderRoute: typeof PublicViewDataInstanceIdImport
      parentRoute: typeof PublicLayoutImport
    }
    '/dashboard/instances/$instanceId': {
      id: '/dashboard/instances/$instanceId'
      path: '/$instanceId'
      fullPath: '/dashboard/instances/$instanceId'
      preLoaderRoute: typeof DashboardInstancesInstanceIdImport
      parentRoute: typeof DashboardInstancesLayoutImport
    }
    '/_public/view-data/': {
      id: '/_public/view-data/'
      path: '/view-data'
      fullPath: '/view-data'
      preLoaderRoute: typeof PublicViewDataIndexImport
      parentRoute: typeof PublicLayoutImport
    }
    '/dashboard/instances/': {
      id: '/dashboard/instances/'
      path: '/'
      fullPath: '/dashboard/instances/'
      preLoaderRoute: typeof DashboardInstancesIndexImport
      parentRoute: typeof DashboardInstancesLayoutImport
    }
  }
}

// Create and export the route tree

interface PublicLayoutRouteChildren {
  PublicContributeRoute: typeof PublicContributeRoute
  PublicImpressumRoute: typeof PublicImpressumRoute
  PublicPrivacyRoute: typeof PublicPrivacyRoute
  PublicIndexRoute: typeof PublicIndexRoute
  PublicViewDataInstanceIdRoute: typeof PublicViewDataInstanceIdRoute
  PublicViewDataIndexRoute: typeof PublicViewDataIndexRoute
}

const PublicLayoutRouteChildren: PublicLayoutRouteChildren = {
  PublicContributeRoute: PublicContributeRoute,
  PublicImpressumRoute: PublicImpressumRoute,
  PublicPrivacyRoute: PublicPrivacyRoute,
  PublicIndexRoute: PublicIndexRoute,
  PublicViewDataInstanceIdRoute: PublicViewDataInstanceIdRoute,
  PublicViewDataIndexRoute: PublicViewDataIndexRoute,
}

const PublicLayoutRouteWithChildren = PublicLayoutRoute._addFileChildren(
  PublicLayoutRouteChildren,
)

interface DashboardInstancesLayoutRouteChildren {
  DashboardInstancesInstanceIdRoute: typeof DashboardInstancesInstanceIdRoute
  DashboardInstancesIndexRoute: typeof DashboardInstancesIndexRoute
}

const DashboardInstancesLayoutRouteChildren: DashboardInstancesLayoutRouteChildren =
  {
    DashboardInstancesInstanceIdRoute: DashboardInstancesInstanceIdRoute,
    DashboardInstancesIndexRoute: DashboardInstancesIndexRoute,
  }

const DashboardInstancesLayoutRouteWithChildren =
  DashboardInstancesLayoutRoute._addFileChildren(
    DashboardInstancesLayoutRouteChildren,
  )

interface DashboardLayoutRouteChildren {
  DashboardInstancesLayoutRoute: typeof DashboardInstancesLayoutRouteWithChildren
  DashboardImportRoute: typeof DashboardImportRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardInstancesLayoutRoute: DashboardInstancesLayoutRouteWithChildren,
  DashboardImportRoute: DashboardImportRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/instances': typeof DashboardInstancesLayoutRouteWithChildren
  '/contribute': typeof PublicContributeRoute
  '/impressum': typeof PublicImpressumRoute
  '/privacy': typeof PublicPrivacyRoute
  '/dashboard/import': typeof DashboardImportRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/': typeof PublicIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/view-data/$instanceId': typeof PublicViewDataInstanceIdRoute
  '/dashboard/instances/$instanceId': typeof DashboardInstancesInstanceIdRoute
  '/view-data': typeof PublicViewDataIndexRoute
  '/dashboard/instances/': typeof DashboardInstancesIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/contribute': typeof PublicContributeRoute
  '/impressum': typeof PublicImpressumRoute
  '/privacy': typeof PublicPrivacyRoute
  '/dashboard/import': typeof DashboardImportRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/': typeof PublicIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/view-data/$instanceId': typeof PublicViewDataInstanceIdRoute
  '/dashboard/instances/$instanceId': typeof DashboardInstancesInstanceIdRoute
  '/view-data': typeof PublicViewDataIndexRoute
  '/dashboard/instances': typeof DashboardInstancesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_public': typeof PublicLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/instances': typeof DashboardInstancesLayoutRouteWithChildren
  '/_public/contribute': typeof PublicContributeRoute
  '/_public/impressum': typeof PublicImpressumRoute
  '/_public/privacy': typeof PublicPrivacyRoute
  '/dashboard/import': typeof DashboardImportRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/_public/': typeof PublicIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/_public/view-data/$instanceId': typeof PublicViewDataInstanceIdRoute
  '/dashboard/instances/$instanceId': typeof DashboardInstancesInstanceIdRoute
  '/_public/view-data/': typeof PublicViewDataIndexRoute
  '/dashboard/instances/': typeof DashboardInstancesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/login'
    | '/dashboard/instances'
    | '/contribute'
    | '/impressum'
    | '/privacy'
    | '/dashboard/import'
    | '/dashboard/users'
    | '/'
    | '/dashboard/'
    | '/view-data/$instanceId'
    | '/dashboard/instances/$instanceId'
    | '/view-data'
    | '/dashboard/instances/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/contribute'
    | '/impressum'
    | '/privacy'
    | '/dashboard/import'
    | '/dashboard/users'
    | '/'
    | '/dashboard'
    | '/view-data/$instanceId'
    | '/dashboard/instances/$instanceId'
    | '/view-data'
    | '/dashboard/instances'
  id:
    | '__root__'
    | '/_public'
    | '/dashboard'
    | '/login'
    | '/dashboard/instances'
    | '/_public/contribute'
    | '/_public/impressum'
    | '/_public/privacy'
    | '/dashboard/import'
    | '/dashboard/users'
    | '/_public/'
    | '/dashboard/'
    | '/_public/view-data/$instanceId'
    | '/dashboard/instances/$instanceId'
    | '/_public/view-data/'
    | '/dashboard/instances/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PublicLayoutRoute: typeof PublicLayoutRouteWithChildren
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  PublicLayoutRoute: PublicLayoutRouteWithChildren,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_public",
        "/dashboard",
        "/login"
      ]
    },
    "/_public": {
      "filePath": "_public/layout.tsx",
      "children": [
        "/_public/contribute",
        "/_public/impressum",
        "/_public/privacy",
        "/_public/",
        "/_public/view-data/$instanceId",
        "/_public/view-data/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/layout.tsx",
      "children": [
        "/dashboard/instances",
        "/dashboard/import",
        "/dashboard/users",
        "/dashboard/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dashboard/instances": {
      "filePath": "dashboard/instances/layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/instances/$instanceId",
        "/dashboard/instances/"
      ]
    },
    "/_public/contribute": {
      "filePath": "_public/contribute.tsx",
      "parent": "/_public"
    },
    "/_public/impressum": {
      "filePath": "_public/impressum.tsx",
      "parent": "/_public"
    },
    "/_public/privacy": {
      "filePath": "_public/privacy.tsx",
      "parent": "/_public"
    },
    "/dashboard/import": {
      "filePath": "dashboard/import.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/users": {
      "filePath": "dashboard/users.tsx",
      "parent": "/dashboard"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/_public/view-data/$instanceId": {
      "filePath": "_public/view-data/$instanceId.tsx",
      "parent": "/_public"
    },
    "/dashboard/instances/$instanceId": {
      "filePath": "dashboard/instances/$instanceId.tsx",
      "parent": "/dashboard/instances"
    },
    "/_public/view-data/": {
      "filePath": "_public/view-data/index.tsx",
      "parent": "/_public"
    },
    "/dashboard/instances/": {
      "filePath": "dashboard/instances/index.tsx",
      "parent": "/dashboard/instances"
    }
  }
}
ROUTE_MANIFEST_END */
